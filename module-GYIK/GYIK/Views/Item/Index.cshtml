@inherits DotNetNuke.Web.Mvc.Framework.DnnWebViewPage<IEnumerable< Dnn.GYIK.GYIK.Models.Item >>

@using System.Text.RegularExpressions
@using DotNetNuke.Web.Mvc.Helpers

<style>
	body {
		font-family: Arial, sans-serif;
		margin: 0;
		padding: 0;
		background-color: #f4f4f4;
	}
	.qbox {
		width: 80%;
		margin: auto;
		padding: 20px;
	}

	.question {
		background-color: lightblue; /* Világosabb szürke háttérszín */
		border-radius: 10px; /* Lekerekített sarkok */
		margin-bottom: 15px;
		padding: 15px;
		cursor: pointer;
		transition: background-color 0.3s ease; /* Átmenet a háttérszín változásához */
	}

	.question:hover {
		background-color: #e0e0e0; /* Világosabb háttérszín az egér fölött */
		box-shadow: 0 0 5px rgba(0,0,0,0.3); /* Könnyű árnyék az egér fölött */
	}

	.answer {
		display: none;
		padding: 10px;
		border-radius: 5px;
		margin-top: 10px;
	}

	.question:hover .answer {
		background-color: #e0e0e0; /* Szürke háttérszín a válaszoknak, amikor az egér a kérdés fölé van helyezve */
	}

	.show {
		display: block;
	}
</style>

<p id="Items-@Dnn.ModuleContext.ModuleId">
    @if (Model.Count() == 0)
    {
        <p>Egy kérdés sincs megadva</p>
    }
    else
    {

        <div class="qbox">

            @foreach (var item in Model)
            {

                <div class="question">
					<h3> @item.ItemName</h3>
	                <div class="answer">
						<p>@item.ItemDescription</p>
	                </div>
                </div>

                if (Dnn.ModuleContext.IsEditable)
                {
                    <div>
                        <a href="@Url.Action("Edit", "Item", new {ctl = "Edit", itemId = item.ItemId})">@Dnn.LocalizeString("EditItem")</a>
                        <a href="@Url.Action("Delete", "Item", new {itemId = item.ItemId})">@Dnn.LocalizeString("DeleteItem")</a>
                    </div>
                }
            }

        </div>

    }
</div>

<script>
  // Add click event listener to each question
  const questions = document.querySelectorAll('.question');

  questions.forEach(question => {
    question.addEventListener('click', () => {
      // Toggle the 'show' class to show/hide answer
      question.querySelector('.answer').classList.toggle('show');
    });
  });
</script>
